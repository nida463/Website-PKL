{
    "sourceFile": "src/Components/Page.js/DataSet.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1729225773954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729493657830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,188 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import \"../../styles/login.css\"; // Pastikan Anda memiliki file CSS ini\r\n+\r\n+const DataSet = () => {\r\n+  const [opds, setOpds] = useState([]); // Semua OPD\r\n+  const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+  const [searchTerm, setSearchTerm] = useState(\"\"); // Input pencarian\r\n+  const [selectedOPD, setSelectedOPD] = useState(null); // OPD yang dipilih\r\n+  const [dataHasil, setDataHasil] = useState([]); // Dataset yang ditampilkan\r\n+  const [allDataSet, setAllDataSet] = useState([]); // Menyimpan semua dataset\r\n+\r\n+  // Fetch semua dataset saat komponen di-mount\r\n+  useEffect(() => {\r\n+    const fetchAllDataSet = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        // Ambil semua dataset pada saat halaman pertama kali dimuat\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/dataset\");\r\n+        setAllDataSet(response.data); // Set hasil dataset dari semua OPD\r\n+        setDataHasil(response.data); // Set juga untuk data yang akan ditampilkan di awal\r\n+      } catch (error) {\r\n+        setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+    fetchAllDataSet();\r\n+  }, []);\r\n+\r\n+  // Fetch data OPD saat komponen di-mount\r\n+  useEffect(() => {\r\n+    const fetchDataOPD = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n+        setOpds(response.data);\r\n+        setFilteredOpds(response.data); // Awalnya tampilkan semua OPD\r\n+      } catch (error) {\r\n+        setError(error.message);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+    fetchDataOPD();\r\n+  }, []);\r\n+\r\n+  // Fetch dataset berdasarkan OPD yang dipilih\r\n+  useEffect(() => {\r\n+    const fetchDatasetByOPD = async () => {\r\n+      if (selectedOPD) {\r\n+        console.log(\"Fetching dataset for OPD:\", selectedOPD); // Debugging log\r\n+        setLoading(true);\r\n+        setDataHasil([]); // Hapus data sebelumnya\r\n+        try {\r\n+          const response = await axios.get(\"http://116.206.212.234:4000/dataset\", {\r\n+            params: {\r\n+              id_opd: selectedOPD.id_opd, // Pastikan ID OPD benar\r\n+            },\r\n+          });\r\n+          console.log(\"Response data:\", response.data); // Debugging log untuk response\r\n+          setDataHasil(response.data); // Set data dataset yang baru\r\n+          setError(null);\r\n+        } catch (error) {\r\n+          console.error(\"Error fetching dataset:\", error); // Debugging log error\r\n+          setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+        } finally {\r\n+          setLoading(false);\r\n+        }\r\n+      } else {\r\n+        // Jika tidak ada OPD yang dipilih, tampilkan semua dataset\r\n+        setDataHasil(allDataSet);\r\n+      }\r\n+    };\r\n+\r\n+    fetchDatasetByOPD();\r\n+  }, [selectedOPD, allDataSet]); // Perubahan state selectedOPD memicu fetch dataset\r\n+\r\n+  // Handle search input\r\n+  const handleSearchChange = (e) => {\r\n+    const searchValue = e.target.value.toLowerCase();\r\n+    setSearchTerm(searchValue);\r\n+\r\n+    // Filter OPD berdasarkan search term\r\n+    const filtered = opds.filter((opd) =>\r\n+      opd.nama_opd.toLowerCase().includes(searchValue)\r\n+    );\r\n+    setFilteredOpds(filtered); // Update filtered OPD\r\n+  };\r\n+\r\n+  // Handle OPD selection\r\n+  const handleSelectOPD = (opd) => {\r\n+    setSelectedOPD(opd); // Set OPD yang dipilih\r\n+\r\n+    // Filter dataset berdasarkan OPD yang dipilih\r\n+    const filteredDataset = allDataSet.filter(\r\n+      (dataset) => dataset.id_opd === opd.id_opd\r\n+    );\r\n+    setDataHasil(filteredDataset); // Update hasil data set yang sesuai dengan OPD\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"dataset-container\">\r\n+      <h2 className=\"dataset-title\">Dataset</h2>\r\n+\r\n+      {/* Kontainer dengan dua kolom */}\r\n+      <div className=\"dataset-content\">\r\n+        {/* Kolom kiri untuk OPD */}\r\n+        <div className=\"left-column\">\r\n+          {/* Input pencarian */}\r\n+          <div className=\"form-row\">\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"dataset-input form-control\"\r\n+              value={searchTerm}\r\n+              onChange={handleSearchChange}\r\n+              placeholder=\"Cari Produsen\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* List OPD */}\r\n+          {filteredOpds.length > 0 && (\r\n+            <div className=\"opd-list\">\r\n+              {filteredOpds.map((opd) => (\r\n+                <div\r\n+                  key={opd.id_opd}\r\n+                  className={`opd-item card ${\r\n+                    selectedOPD && selectedOPD.id_opd === opd.id_opd ? \"selected\" : \"\"\r\n+                  }`}\r\n+                  onClick={() => handleSelectOPD(opd)} // Mengatur OPD yang dipilih saat di klik\r\n+                >\r\n+                  <div className=\"card-body\">\r\n+                    <h5 className=\"card-title\">{opd.nama_opd}</h5>\r\n+                  </div>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Error handling */}\r\n+          {error && <p className=\"error-message\">{error}</p>}\r\n+        </div>\r\n+\r\n+        {/* Kolom kanan untuk hasil dataset */}\r\n+        <div className=\"right-column\">\r\n+          {/* Loading state */}\r\n+          {loading ? (\r\n+            <p>Loading...</p>\r\n+          ) : (\r\n+            <div className=\"result-list\">\r\n+              <h3>Hasil Dataset</h3>\r\n+              {dataHasil.length > 0 ? (\r\n+                dataHasil.map((item, index) => (\r\n+                  <div key={index} className=\"data-item card\">\r\n+                    <div className=\"card-body\">\r\n+                      <h5 className=\"card-title\">{item.nama_dataset}</h5>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Deskripsi:</strong> {item.description}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Uraian DSSD:</strong> {item.uraian_dssd}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Tanggal Dimodifikasi:</strong> {item.modified}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Tahun:</strong> {item.tahun}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Nama OPD:</strong> {item.nama_opd}\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              ) : (\r\n+                <p>Tidak ada data yang ditemukan</p>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DataSet;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729494151512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n-import \"../../styles/login.css\"; // Pastikan Anda memiliki file CSS ini\r\n+import \"../../styles/Dat.css\"; // Pastikan Anda memiliki file CSS ini\r\n \r\n const DataSet = () => {\r\n   const [opds, setOpds] = useState([]); // Semua OPD\r\n   const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n@@ -184,105 +184,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default DataSet;\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"../../styles/Dataset.css\"; // Anda bisa menambahkan styling sesuai kebutuhan\r\n-\r\n-const DatasetComponent = () => {\r\n-  const [dataset, setDataset] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const itemsPerPage = 10; // Jumlah item per halaman\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async (page = 1) => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/dataset\", {\r\n-          params: {\r\n-            page: page,\r\n-            per_page: itemsPerPage, // Anda bisa mengganti jumlah per halaman sesuai kebutuhan\r\n-          },\r\n-        });\r\n-        setDataset(response.data);\r\n-        setError(null);\r\n-      } catch (err) {\r\n-        setError(\"Gagal mengambil data.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchData(currentPage); // Ambil data saat pertama kali komponen dimuat\r\n-  }, [currentPage]);\r\n-\r\n-  const handlePageChange = (newPage) => {\r\n-    setCurrentPage(newPage);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"dataset-container\">\r\n-      <h2 className=\"dataset-title\">Dataset Sektoral</h2>\r\n-      {loading ? (\r\n-        <p>Loading...</p>\r\n-      ) : error ? (\r\n-        <p className=\"error-message\">{error}</p>\r\n-      ) : (\r\n-        <table className=\"dataset-table\">\r\n-          <thead>\r\n-            <tr>\r\n-              <th>No</th>\r\n-              <th>Uraian</th>\r\n-              <th>Description</th>\r\n-              <th>Modified</th>\r\n-              <th>Nama OPD</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {dataset.length > 0 ? (\r\n-              dataset.map((item, index) => (\r\n-                <tr key={item.id}>\r\n-                  <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n-                  <td>{item.uraian_dssd}</td>\r\n-                  <td>{item.description}</td>\r\n-                  <td>{new Date(item.modified).toLocaleDateString()}</td>\r\n-                  <td>{item.nama_opd}</td>\r\n-                </tr>\r\n-              ))\r\n-            ) : (\r\n-              <tr>\r\n-                <td colSpan=\"5\">Tidak ada data yang ditemukan</td>\r\n-              </tr>\r\n-            )}\r\n-          </tbody>\r\n-        </table>\r\n-      )}\r\n-\r\n-      {/* Pagination */}\r\n-      <div className=\"pagination\">\r\n-        <button\r\n-          className=\"pagination-button\"\r\n-          onClick={() => handlePageChange(currentPage - 1)}\r\n-          disabled={currentPage === 1}\r\n-        >\r\n-          Previous\r\n-        </button>\r\n-        <span className=\"page-info\">\r\n-          Page {currentPage} of {Math.ceil(dataset.length / itemsPerPage)}\r\n-        </span>\r\n-        <button\r\n-          className=\"pagination-button\"\r\n-          onClick={() => handlePageChange(currentPage + 1)}\r\n-          disabled={dataset.length < itemsPerPage}\r\n-        >\r\n-          Next\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default DatasetComponent;\n\\ No newline at end of file\n+export default DataSet;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729494157130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,188 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import \"../../styles/.css\"; // Pastikan Anda memiliki file CSS ini\r\n+\r\n+const DataSet = () => {\r\n+  const [opds, setOpds] = useState([]); // Semua OPD\r\n+  const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+  const [searchTerm, setSearchTerm] = useState(\"\"); // Input pencarian\r\n+  const [selectedOPD, setSelectedOPD] = useState(null); // OPD yang dipilih\r\n+  const [dataHasil, setDataHasil] = useState([]); // Dataset yang ditampilkan\r\n+  const [allDataSet, setAllDataSet] = useState([]); // Menyimpan semua dataset\r\n+\r\n+  // Fetch semua dataset saat komponen di-mount\r\n+  useEffect(() => {\r\n+    const fetchAllDataSet = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        // Ambil semua dataset pada saat halaman pertama kali dimuat\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/dataset\");\r\n+        setAllDataSet(response.data); // Set hasil dataset dari semua OPD\r\n+        setDataHasil(response.data); // Set juga untuk data yang akan ditampilkan di awal\r\n+      } catch (error) {\r\n+        setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+    fetchAllDataSet();\r\n+  }, []);\r\n+\r\n+  // Fetch data OPD saat komponen di-mount\r\n+  useEffect(() => {\r\n+    const fetchDataOPD = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n+        setOpds(response.data);\r\n+        setFilteredOpds(response.data); // Awalnya tampilkan semua OPD\r\n+      } catch (error) {\r\n+        setError(error.message);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+    fetchDataOPD();\r\n+  }, []);\r\n+\r\n+  // Fetch dataset berdasarkan OPD yang dipilih\r\n+  useEffect(() => {\r\n+    const fetchDatasetByOPD = async () => {\r\n+      if (selectedOPD) {\r\n+        console.log(\"Fetching dataset for OPD:\", selectedOPD); // Debugging log\r\n+        setLoading(true);\r\n+        setDataHasil([]); // Hapus data sebelumnya\r\n+        try {\r\n+          const response = await axios.get(\"http://116.206.212.234:4000/dataset\", {\r\n+            params: {\r\n+              id_opd: selectedOPD.id_opd, // Pastikan ID OPD benar\r\n+            },\r\n+          });\r\n+          console.log(\"Response data:\", response.data); // Debugging log untuk response\r\n+          setDataHasil(response.data); // Set data dataset yang baru\r\n+          setError(null);\r\n+        } catch (error) {\r\n+          console.error(\"Error fetching dataset:\", error); // Debugging log error\r\n+          setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+        } finally {\r\n+          setLoading(false);\r\n+        }\r\n+      } else {\r\n+        // Jika tidak ada OPD yang dipilih, tampilkan semua dataset\r\n+        setDataHasil(allDataSet);\r\n+      }\r\n+    };\r\n+\r\n+    fetchDatasetByOPD();\r\n+  }, [selectedOPD, allDataSet]); // Perubahan state selectedOPD memicu fetch dataset\r\n+\r\n+  // Handle search input\r\n+  const handleSearchChange = (e) => {\r\n+    const searchValue = e.target.value.toLowerCase();\r\n+    setSearchTerm(searchValue);\r\n+\r\n+    // Filter OPD berdasarkan search term\r\n+    const filtered = opds.filter((opd) =>\r\n+      opd.nama_opd.toLowerCase().includes(searchValue)\r\n+    );\r\n+    setFilteredOpds(filtered); // Update filtered OPD\r\n+  };\r\n+\r\n+  // Handle OPD selection\r\n+  const handleSelectOPD = (opd) => {\r\n+    setSelectedOPD(opd); // Set OPD yang dipilih\r\n+\r\n+    // Filter dataset berdasarkan OPD yang dipilih\r\n+    const filteredDataset = allDataSet.filter(\r\n+      (dataset) => dataset.id_opd === opd.id_opd\r\n+    );\r\n+    setDataHasil(filteredDataset); // Update hasil data set yang sesuai dengan OPD\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"dataset-container\">\r\n+      <h2 className=\"dataset-title\">Dataset</h2>\r\n+\r\n+      {/* Kontainer dengan dua kolom */}\r\n+      <div className=\"dataset-content\">\r\n+        {/* Kolom kiri untuk OPD */}\r\n+        <div className=\"left-column\">\r\n+          {/* Input pencarian */}\r\n+          <div className=\"form-row\">\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"dataset-input form-control\"\r\n+              value={searchTerm}\r\n+              onChange={handleSearchChange}\r\n+              placeholder=\"Cari Produsen\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* List OPD */}\r\n+          {filteredOpds.length > 0 && (\r\n+            <div className=\"opd-list\">\r\n+              {filteredOpds.map((opd) => (\r\n+                <div\r\n+                  key={opd.id_opd}\r\n+                  className={`opd-item card ${\r\n+                    selectedOPD && selectedOPD.id_opd === opd.id_opd ? \"selected\" : \"\"\r\n+                  }`}\r\n+                  onClick={() => handleSelectOPD(opd)} // Mengatur OPD yang dipilih saat di klik\r\n+                >\r\n+                  <div className=\"card-body\">\r\n+                    <h5 className=\"card-title\">{opd.nama_opd}</h5>\r\n+                  </div>\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Error handling */}\r\n+          {error && <p className=\"error-message\">{error}</p>}\r\n+        </div>\r\n+\r\n+        {/* Kolom kanan untuk hasil dataset */}\r\n+        <div className=\"right-column\">\r\n+          {/* Loading state */}\r\n+          {loading ? (\r\n+            <p>Loading...</p>\r\n+          ) : (\r\n+            <div className=\"result-list\">\r\n+              <h3>Hasil Dataset</h3>\r\n+              {dataHasil.length > 0 ? (\r\n+                dataHasil.map((item, index) => (\r\n+                  <div key={index} className=\"data-item card\">\r\n+                    <div className=\"card-body\">\r\n+                      <h5 className=\"card-title\">{item.nama_dataset}</h5>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Deskripsi:</strong> {item.description}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Uraian DSSD:</strong> {item.uraian_dssd}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Tanggal Dimodifikasi:</strong> {item.modified}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Tahun:</strong> {item.tahun}\r\n+                      </p>\r\n+                      <p className=\"card-text\">\r\n+                        <strong>Nama OPD:</strong> {item.nama_opd}\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              ) : (\r\n+                <p>Tidak ada data yang ditemukan</p>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DataSet;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729494158789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n-import \"../../styles/.css\"; // Pastikan Anda memiliki file CSS ini\r\n+import \"../../styles/D.css\"; // Pastikan Anda memiliki file CSS ini\r\n \r\n const DataSet = () => {\r\n   const [opds, setOpds] = useState([]); // Semua OPD\r\n   const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n@@ -184,193 +184,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default DataSet;\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"../../styles/Dat.css\"; // Pastikan Anda memiliki file CSS ini\r\n-\r\n-const DataSet = () => {\r\n-  const [opds, setOpds] = useState([]); // Semua OPD\r\n-  const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-  const [searchTerm, setSearchTerm] = useState(\"\"); // Input pencarian\r\n-  const [selectedOPD, setSelectedOPD] = useState(null); // OPD yang dipilih\r\n-  const [dataHasil, setDataHasil] = useState([]); // Dataset yang ditampilkan\r\n-  const [allDataSet, setAllDataSet] = useState([]); // Menyimpan semua dataset\r\n-\r\n-  // Fetch semua dataset saat komponen di-mount\r\n-  useEffect(() => {\r\n-    const fetchAllDataSet = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        // Ambil semua dataset pada saat halaman pertama kali dimuat\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/dataset\");\r\n-        setAllDataSet(response.data); // Set hasil dataset dari semua OPD\r\n-        setDataHasil(response.data); // Set juga untuk data yang akan ditampilkan di awal\r\n-      } catch (error) {\r\n-        setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchAllDataSet();\r\n-  }, []);\r\n-\r\n-  // Fetch data OPD saat komponen di-mount\r\n-  useEffect(() => {\r\n-    const fetchDataOPD = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n-        setOpds(response.data);\r\n-        setFilteredOpds(response.data); // Awalnya tampilkan semua OPD\r\n-      } catch (error) {\r\n-        setError(error.message);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchDataOPD();\r\n-  }, []);\r\n-\r\n-  // Fetch dataset berdasarkan OPD yang dipilih\r\n-  useEffect(() => {\r\n-    const fetchDatasetByOPD = async () => {\r\n-      if (selectedOPD) {\r\n-        console.log(\"Fetching dataset for OPD:\", selectedOPD); // Debugging log\r\n-        setLoading(true);\r\n-        setDataHasil([]); // Hapus data sebelumnya\r\n-        try {\r\n-          const response = await axios.get(\"http://116.206.212.234:4000/dataset\", {\r\n-            params: {\r\n-              id_opd: selectedOPD.id_opd, // Pastikan ID OPD benar\r\n-            },\r\n-          });\r\n-          console.log(\"Response data:\", response.data); // Debugging log untuk response\r\n-          setDataHasil(response.data); // Set data dataset yang baru\r\n-          setError(null);\r\n-        } catch (error) {\r\n-          console.error(\"Error fetching dataset:\", error); // Debugging log error\r\n-          setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-        } finally {\r\n-          setLoading(false);\r\n-        }\r\n-      } else {\r\n-        // Jika tidak ada OPD yang dipilih, tampilkan semua dataset\r\n-        setDataHasil(allDataSet);\r\n-      }\r\n-    };\r\n-\r\n-    fetchDatasetByOPD();\r\n-  }, [selectedOPD, allDataSet]); // Perubahan state selectedOPD memicu fetch dataset\r\n-\r\n-  // Handle search input\r\n-  const handleSearchChange = (e) => {\r\n-    const searchValue = e.target.value.toLowerCase();\r\n-    setSearchTerm(searchValue);\r\n-\r\n-    // Filter OPD berdasarkan search term\r\n-    const filtered = opds.filter((opd) =>\r\n-      opd.nama_opd.toLowerCase().includes(searchValue)\r\n-    );\r\n-    setFilteredOpds(filtered); // Update filtered OPD\r\n-  };\r\n-\r\n-  // Handle OPD selection\r\n-  const handleSelectOPD = (opd) => {\r\n-    setSelectedOPD(opd); // Set OPD yang dipilih\r\n-\r\n-    // Filter dataset berdasarkan OPD yang dipilih\r\n-    const filteredDataset = allDataSet.filter(\r\n-      (dataset) => dataset.id_opd === opd.id_opd\r\n-    );\r\n-    setDataHasil(filteredDataset); // Update hasil data set yang sesuai dengan OPD\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"dataset-container\">\r\n-      <h2 className=\"dataset-title\">Dataset</h2>\r\n-\r\n-      {/* Kontainer dengan dua kolom */}\r\n-      <div className=\"dataset-content\">\r\n-        {/* Kolom kiri untuk OPD */}\r\n-        <div className=\"left-column\">\r\n-          {/* Input pencarian */}\r\n-          <div className=\"form-row\">\r\n-            <input\r\n-              type=\"text\"\r\n-              className=\"dataset-input form-control\"\r\n-              value={searchTerm}\r\n-              onChange={handleSearchChange}\r\n-              placeholder=\"Cari Produsen\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* List OPD */}\r\n-          {filteredOpds.length > 0 && (\r\n-            <div className=\"opd-list\">\r\n-              {filteredOpds.map((opd) => (\r\n-                <div\r\n-                  key={opd.id_opd}\r\n-                  className={`opd-item card ${\r\n-                    selectedOPD && selectedOPD.id_opd === opd.id_opd ? \"selected\" : \"\"\r\n-                  }`}\r\n-                  onClick={() => handleSelectOPD(opd)} // Mengatur OPD yang dipilih saat di klik\r\n-                >\r\n-                  <div className=\"card-body\">\r\n-                    <h5 className=\"card-title\">{opd.nama_opd}</h5>\r\n-                  </div>\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {/* Error handling */}\r\n-          {error && <p className=\"error-message\">{error}</p>}\r\n-        </div>\r\n-\r\n-        {/* Kolom kanan untuk hasil dataset */}\r\n-        <div className=\"right-column\">\r\n-          {/* Loading state */}\r\n-          {loading ? (\r\n-            <p>Loading...</p>\r\n-          ) : (\r\n-            <div className=\"result-list\">\r\n-              <h3>Hasil Dataset</h3>\r\n-              {dataHasil.length > 0 ? (\r\n-                dataHasil.map((item, index) => (\r\n-                  <div key={index} className=\"data-item card\">\r\n-                    <div className=\"card-body\">\r\n-                      <h5 className=\"card-title\">{item.nama_dataset}</h5>\r\n-                      <p className=\"card-text\">\r\n-                        <strong>Deskripsi:</strong> {item.description}\r\n-                      </p>\r\n-                      <p className=\"card-text\">\r\n-                        <strong>Uraian DSSD:</strong> {item.uraian_dssd}\r\n-                      </p>\r\n-                      <p className=\"card-text\">\r\n-                        <strong>Tanggal Dimodifikasi:</strong> {item.modified}\r\n-                      </p>\r\n-                      <p className=\"card-text\">\r\n-                        <strong>Tahun:</strong> {item.tahun}\r\n-                      </p>\r\n-                      <p className=\"card-text\">\r\n-                        <strong>Nama OPD:</strong> {item.nama_opd}\r\n-                      </p>\r\n-                    </div>\r\n-                  </div>\r\n-                ))\r\n-              ) : (\r\n-                <p>Tidak ada data yang ditemukan</p>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default DataSet;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729528557811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n-import \"../../styles/D.css\"; // Pastikan Anda memiliki file CSS ini\r\n+import \"../../styles/Dataset.css\"; // Pastikan Anda memiliki file CSS ini\r\n \r\n const DataSet = () => {\r\n   const [opds, setOpds] = useState([]); // Semua OPD\r\n   const [filteredOpds, setFilteredOpds] = useState([]); // OPD yang difilter berdasarkan pencarian\r\n@@ -174,9 +174,9 @@\n                     </div>\r\n                   </div>\r\n                 ))\r\n               ) : (\r\n-                <p>Tidak ada data yang ditemukan</p>\r\n+                <p>Tidak ada data yang ditemukan</p>0\r\n               )}\r\n             </div>\r\n           )}\r\n         </div>\r\n"
                },
                {
                    "date": 1729528562893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n                     </div>\r\n                   </div>\r\n                 ))\r\n               ) : (\r\n-                <p>Tidak ada data yang ditemukan</p>0\r\n+                <p>Tidak ada data yang ditemukan</p>\r\n               )}\r\n             </div>\r\n           )}\r\n         </div>\r\n"
                }
            ],
            "date": 1729225773954,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Dataset.css\"; // Anda bisa menambahkan styling sesuai kebutuhan\r\n\r\nconst DatasetComponent = () => {\r\n  const [dataset, setDataset] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10; // Jumlah item per halaman\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (page = 1) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\"http://116.206.212.234:4000/dataset\", {\r\n          params: {\r\n            page: page,\r\n            per_page: itemsPerPage, // Anda bisa mengganti jumlah per halaman sesuai kebutuhan\r\n          },\r\n        });\r\n        setDataset(response.data);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(\"Gagal mengambil data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData(currentPage); // Ambil data saat pertama kali komponen dimuat\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dataset-container\">\r\n      <h2 className=\"dataset-title\">Dataset Sektoral</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : (\r\n        <table className=\"dataset-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>No</th>\r\n              <th>Uraian</th>\r\n              <th>Description</th>\r\n              <th>Modified</th>\r\n              <th>Nama OPD</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataset.length > 0 ? (\r\n              dataset.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n                  <td>{item.uraian_dssd}</td>\r\n                  <td>{item.description}</td>\r\n                  <td>{new Date(item.modified).toLocaleDateString()}</td>\r\n                  <td>{item.nama_opd}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"5\">Tidak ada data yang ditemukan</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span className=\"page-info\">\r\n          Page {currentPage} of {Math.ceil(dataset.length / itemsPerPage)}\r\n        </span>\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n          disabled={dataset.length < itemsPerPage}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatasetComponent;\r\n"
        }
    ]
}