{
    "sourceFile": "src/Components/Page.js/Sektoral.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1728543574114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728543582173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,8 @@\n   };\r\n \r\n   return (\r\n     <div className=\"sektoral-container\">\r\n-      {/* <Navbar/> */}\r\n       <div className=\"sektoral-box\">\r\n         <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n         <form className=\"search-form\" onSubmit={handleSearch}>\r\n           <div className=\"search-inputs\">\r\n"
                },
                {
                    "date": 1728549380381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,177 +0,0 @@\n-import React, { useState, useEffect } from 'react';\r\n-import axios from \"axios\";\r\n-import \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n-\r\n-const Sektoral = () => {\r\n-  const [opds, setDataOPD] = useState([]);\r\n-  const [urusans, setDataUrusan] = useState([]);\r\n-  const [results, setResults] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-  const [DariTahun, setDariTahun] = useState('');\r\n-  const [SampaiTahun, setSampaiTahun] = useState('');\r\n-  const [selectedOPD, setSelectedOPD] = useState('');\r\n-  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n-\r\n-  // Fetch data OPD saat komponen dimuat\r\n-  useEffect(() => {\r\n-    const fetchDataOPD = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n-        setDataOPD(response.data);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data OPD\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchDataOPD();\r\n-  }, []);\r\n-\r\n-  // Menghandle perubahan OPD\r\n-  const handleOPDChange = async (e) => {\r\n-    const opdId = e.target.value;\r\n-    setSelectedOPD(opdId);\r\n-    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n-    setLoading(true);\r\n-\r\n-    if (opdId) {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n-        );\r\n-        setDataUrusan(response.data);\r\n-        setError(null);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data urusan.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    } else {\r\n-      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Menghandle pencarian data\r\n-  const handleSearch = async (e) => {\r\n-    e.preventDefault();\r\n-    setLoading(true);\r\n-\r\n-    try {\r\n-      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n-        params: {\r\n-          id_user_opd: selectedOPD,\r\n-          kode_urusan: selectedUrusan,\r\n-          dari_tahun: DariTahun,\r\n-          sampai_tahun: SampaiTahun,\r\n-        },\r\n-      });\r\n-      setResults(response.data);\r\n-      setError(null);\r\n-    } catch (error) {\r\n-      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"sektoral-container\">\r\n-      <div className=\"sektoral-box\">\r\n-        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n-        <form className=\"search-form\" onSubmit={handleSearch}>\r\n-          <div className=\"search-inputs\">\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedOPD}\r\n-              onChange={handleOPDChange}\r\n-            >\r\n-              <option value=\"\">Pilih OPD</option>\r\n-              {opds.map((OPD) => (\r\n-                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n-                  {OPD.nama_opd}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedUrusan}\r\n-              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n-              disabled={!selectedOPD}\r\n-            >\r\n-              <option value=\"\">Pilih Urusan</option>\r\n-              {urusans.map((Urusan) => (\r\n-                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n-                  {Urusan.nama_urusan}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Dari Tahun\"\r\n-              value={DariTahun}\r\n-              onChange={(e) => setDariTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Sampai Tahun\"\r\n-              value={SampaiTahun}\r\n-              onChange={(e) => setSampaiTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-            <button className=\"search-button\" type=\"submit\">\r\n-              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n-              Cari\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-\r\n-        {error && <p className=\"error-message\">{error}</p>}\r\n-\r\n-        {loading ? (\r\n-          <p>Loading...</p>\r\n-        ) : (\r\n-          <div className=\"sektoral-results\">\r\n-            <h3>Hasil Pencarian</h3>\r\n-            <table className=\"sektoral-table\">\r\n-              <thead>\r\n-                <tr>\r\n-                  <th>Uraian</th>\r\n-                  <th>Satuan</th>\r\n-                  <th>Jenis</th>\r\n-                  <th>Kategori</th>\r\n-                </tr>\r\n-              </thead>\r\n-              <tbody>\r\n-                {results.length > 0 ? (\r\n-                  results.map((item, index) => (\r\n-                    <tr key={index}>\r\n-                      <td>{item.uraian_dssd}</td>\r\n-                      <td>{item.satuan}</td>\r\n-                      <td>{item.jenis_string}</td>\r\n-                      <td>{item.kategori_string}</td>\r\n-                    </tr>\r\n-                  ))\r\n-                ) : (\r\n-                  <tr>\r\n-                    <td colSpan=\"4\">Tidak ada data yang ditemukan</td>\r\n-                  </tr>\r\n-                )}\r\n-              </tbody>\r\n-            </table>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Sektoral;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728549399589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,222 @@\n-\n+import React, { useState, useEffect } from 'react';\r\n+import axios from \"axios\";\r\n+import \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n+\r\n+const Sektoral = () => {\r\n+  const [opds, setDataOPD] = useState([]);\r\n+  const [urusans, setDataUrusan] = useState([]);\r\n+  const [results, setResults] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+  const [DariTahun, setDariTahun] = useState('');\r\n+  const [SampaiTahun, setSampaiTahun] = useState('');\r\n+  const [selectedOPD, setSelectedOPD] = useState('');\r\n+  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n+\r\n+  // State untuk pagination\r\n+  const [page, setPage] = useState(1); // Halaman saat ini\r\n+  const [perPage, setPerPage] = useState(20); // Jumlah data per halaman (default 20, max 50)\r\n+  const maxPerPage = 50; // Batas maksimal data per halaman\r\n+\r\n+  // Fetch data OPD saat komponen dimuat\r\n+  useEffect(() => {\r\n+    const fetchDataOPD = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n+        setDataOPD(response.data);\r\n+      } catch (error) {\r\n+        setError(\"Gagal mengambil data OPD\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchDataOPD();\r\n+  }, []);\r\n+\r\n+  // Menghandle perubahan OPD\r\n+  const handleOPDChange = async (e) => {\r\n+    const opdId = e.target.value;\r\n+    setSelectedOPD(opdId);\r\n+    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n+    setLoading(true);\r\n+\r\n+    if (opdId) {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n+        );\r\n+        setDataUrusan(response.data);\r\n+        setError(null);\r\n+      } catch (error) {\r\n+        setError(\"Gagal mengambil data urusan.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    } else {\r\n+      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  // Menghandle pencarian data dengan pagination\r\n+  const handleSearch = async (e) => {\r\n+    e.preventDefault();\r\n+    setLoading(true);\r\n+\r\n+    try {\r\n+      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n+        params: {\r\n+          id_user_opd: selectedOPD,\r\n+          kode_urusan: selectedUrusan,\r\n+          dari_tahun: DariTahun,\r\n+          sampai_tahun: SampaiTahun,\r\n+          page: page,           // Menambahkan parameter page\r\n+          per_page: perPage,     // Menambahkan parameter per_page\r\n+        },\r\n+      });\r\n+      setResults(response.data);\r\n+      setError(null);\r\n+    } catch (error) {\r\n+      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  // Fungsi untuk menghandle perubahan halaman\r\n+  const handlePageChange = (newPage) => {\r\n+    setPage(newPage);\r\n+  };\r\n+\r\n+  // Fungsi untuk menghandle perubahan jumlah data per halaman\r\n+  const handlePerPageChange = (e) => {\r\n+    const value = parseInt(e.target.value, 10);\r\n+    setPerPage(value > maxPerPage ? maxPerPage : value); // Batasi jumlah data per halaman maksimal 50\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"sektoral-container\">\r\n+      <div className=\"sektoral-box\">\r\n+        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n+        <form className=\"search-form\" onSubmit={handleSearch}>\r\n+          <div className=\"search-inputs\">\r\n+            <select\r\n+              className=\"search-input\"\r\n+              value={selectedOPD}\r\n+              onChange={handleOPDChange}\r\n+            >\r\n+              <option value=\"\">Pilih OPD</option>\r\n+              {opds.map((OPD) => (\r\n+                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n+                  {OPD.nama_opd}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+\r\n+            <select\r\n+              className=\"search-input\"\r\n+              value={selectedUrusan}\r\n+              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n+              disabled={!selectedOPD}\r\n+            >\r\n+              <option value=\"\">Pilih Urusan</option>\r\n+              {urusans.map((Urusan) => (\r\n+                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n+                  {Urusan.nama_urusan}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+\r\n+            <input\r\n+              className=\"search-input\"\r\n+              type=\"number\"\r\n+              placeholder=\"Dari Tahun\"\r\n+              value={DariTahun}\r\n+              onChange={(e) => setDariTahun(e.target.value)}\r\n+              required\r\n+            />\r\n+            <input\r\n+              className=\"search-input\"\r\n+              type=\"number\"\r\n+              placeholder=\"Sampai Tahun\"\r\n+              value={SampaiTahun}\r\n+              onChange={(e) => setSampaiTahun(e.target.value)}\r\n+              required\r\n+            />\r\n+\r\n+            <button className=\"search-button\" type=\"submit\">\r\n+              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n+              Cari\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"pagination-controls\">\r\n+            <label>Data per halaman:</label>\r\n+            <select value={perPage} onChange={handlePerPageChange}>\r\n+              <option value=\"20\">20</option>\r\n+              <option value=\"30\">30</option>\r\n+              <option value=\"50\">50</option>\r\n+            </select>\r\n+          </div>\r\n+        </form>\r\n+\r\n+        {error && <p className=\"error-message\">{error}</p>}\r\n+\r\n+        {loading ? (\r\n+          <p>Loading...</p>\r\n+        ) : (\r\n+          <div className=\"sektoral-results\">\r\n+            <h3>Hasil Pencarian</h3>\r\n+            <table className=\"sektoral-table\">\r\n+              <thead>\r\n+                <tr>\r\n+                  <th>Uraian</th>\r\n+                  <th>Satuan</th>\r\n+                  <th>Jenis</th>\r\n+                  <th>Kategori</th>\r\n+                </tr>\r\n+              </thead>\r\n+              <tbody>\r\n+                {results.length > 0 ? (\r\n+                  results.map((item, index) => (\r\n+                    <tr key={index}>\r\n+                      <td>{item.uraian_dssd}</td>\r\n+                      <td>{item.satuan}</td>\r\n+                      <td>{item.jenis_string}</td>\r\n+                      <td>{item.kategori_string}</td>\r\n+                    </tr>\r\n+                  ))\r\n+                ) : (\r\n+                  <tr>\r\n+                    <td colSpan=\"4\">Tidak ada data yang ditemukan</td>\r\n+                  </tr>\r\n+                )}\r\n+              </tbody>\r\n+            </table>\r\n+\r\n+            {/* Pagination Buttons */}\r\n+            <div className=\"pagination-buttons\">\r\n+              <button\r\n+                onClick={() => handlePageChange(page - 1)}\r\n+                disabled={page === 1}\r\n+              >\r\n+                Previous\r\n+              </button>\r\n+              <span>Page {page}</span>\r\n+              <button\r\n+                onClick={() => handlePageChange(page + 1)}\r\n+                disabled={results.length < perPage}\r\n+              >\r\n+                Next\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Sektoral;\r\n"
                },
                {
                    "date": 1728550645711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,11 @@\n     const value = parseInt(e.target.value, 10);\r\n     setPerPage(value > maxPerPage ? maxPerPage : value); // Batasi jumlah data per halaman maksimal 50\r\n   };\r\n \r\n+  // Menghitung jumlah halaman total\r\n+  const totalPages = Math.ceil(results.length / perPage);\r\n+\r\n   return (\r\n     <div className=\"sektoral-container\">\r\n       <div className=\"sektoral-box\">\r\n         <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n@@ -150,17 +153,8 @@\n               <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n               Cari\r\n             </button>\r\n           </div>\r\n-\r\n-          <div className=\"pagination-controls\">\r\n-            <label>Data per halaman:</label>\r\n-            <select value={perPage} onChange={handlePerPageChange}>\r\n-              <option value=\"20\">20</option>\r\n-              <option value=\"30\">30</option>\r\n-              <option value=\"50\">50</option>\r\n-            </select>\r\n-          </div>\r\n         </form>\r\n \r\n         {error && <p className=\"error-message\">{error}</p>}\r\n \r\n@@ -195,23 +189,33 @@\n                 )}\r\n               </tbody>\r\n             </table>\r\n \r\n-            {/* Pagination Buttons */}\r\n-            <div className=\"pagination-buttons\">\r\n-              <button\r\n-                onClick={() => handlePageChange(page - 1)}\r\n-                disabled={page === 1}\r\n-              >\r\n-                Previous\r\n-              </button>\r\n-              <span>Page {page}</span>\r\n-              <button\r\n-                onClick={() => handlePageChange(page + 1)}\r\n-                disabled={results.length < perPage}\r\n-              >\r\n-                Next\r\n-              </button>\r\n+            {/* Pagination */}\r\n+            {results.length > 0 && (\r\n+              <div className=\"pagination\">\r\n+                <span>Halaman:</span>\r\n+                {Array.from({ length: totalPages }, (_, index) => (\r\n+                  <button\r\n+                    key={index}\r\n+                    onClick={() => handlePageChange(index + 1)}\r\n+                    className={`page-button ${page === index + 1 ? 'active' : ''}`}\r\n+                  >\r\n+                    {index + 1}\r\n+                  </button>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+\r\n+            {/* Pengaturan jumlah data per halaman */}\r\n+            <div className=\"pagination-controls\">\r\n+              <label>Data per halaman:</label>\r\n+              <select value={perPage} onChange={handlePerPageChange}>\r\n+                <option value=\"20\">20</option>\r\n+                <option value=\"30\">30</option>\r\n+                <option value=\"40\">40</option>\r\n+                <option value=\"50\">50</option>\r\n+              </select>\r\n             </div>\r\n           </div>\r\n         )}\r\n       </div>\r\n"
                },
                {
                    "date": 1728550818340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,226 +0,0 @@\n-import React, { useState, useEffect } from 'react';\r\n-import axios from \"axios\";\r\n-import \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n-\r\n-const Sektoral = () => {\r\n-  const [opds, setDataOPD] = useState([]);\r\n-  const [urusans, setDataUrusan] = useState([]);\r\n-  const [results, setResults] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-  const [DariTahun, setDariTahun] = useState('');\r\n-  const [SampaiTahun, setSampaiTahun] = useState('');\r\n-  const [selectedOPD, setSelectedOPD] = useState('');\r\n-  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n-\r\n-  // State untuk pagination\r\n-  const [page, setPage] = useState(1); // Halaman saat ini\r\n-  const [perPage, setPerPage] = useState(20); // Jumlah data per halaman (default 20, max 50)\r\n-  const maxPerPage = 50; // Batas maksimal data per halaman\r\n-\r\n-  // Fetch data OPD saat komponen dimuat\r\n-  useEffect(() => {\r\n-    const fetchDataOPD = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n-        setDataOPD(response.data);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data OPD\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchDataOPD();\r\n-  }, []);\r\n-\r\n-  // Menghandle perubahan OPD\r\n-  const handleOPDChange = async (e) => {\r\n-    const opdId = e.target.value;\r\n-    setSelectedOPD(opdId);\r\n-    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n-    setLoading(true);\r\n-\r\n-    if (opdId) {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n-        );\r\n-        setDataUrusan(response.data);\r\n-        setError(null);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data urusan.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    } else {\r\n-      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Menghandle pencarian data dengan pagination\r\n-  const handleSearch = async (e) => {\r\n-    e.preventDefault();\r\n-    setLoading(true);\r\n-\r\n-    try {\r\n-      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n-        params: {\r\n-          id_user_opd: selectedOPD,\r\n-          kode_urusan: selectedUrusan,\r\n-          dari_tahun: DariTahun,\r\n-          sampai_tahun: SampaiTahun,\r\n-          page: page,           // Menambahkan parameter page\r\n-          per_page: perPage,     // Menambahkan parameter per_page\r\n-        },\r\n-      });\r\n-      setResults(response.data);\r\n-      setError(null);\r\n-    } catch (error) {\r\n-      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Fungsi untuk menghandle perubahan halaman\r\n-  const handlePageChange = (newPage) => {\r\n-    setPage(newPage);\r\n-  };\r\n-\r\n-  // Fungsi untuk menghandle perubahan jumlah data per halaman\r\n-  const handlePerPageChange = (e) => {\r\n-    const value = parseInt(e.target.value, 10);\r\n-    setPerPage(value > maxPerPage ? maxPerPage : value); // Batasi jumlah data per halaman maksimal 50\r\n-  };\r\n-\r\n-  // Menghitung jumlah halaman total\r\n-  const totalPages = Math.ceil(results.length / perPage);\r\n-\r\n-  return (\r\n-    <div className=\"sektoral-container\">\r\n-      <div className=\"sektoral-box\">\r\n-        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n-        <form className=\"search-form\" onSubmit={handleSearch}>\r\n-          <div className=\"search-inputs\">\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedOPD}\r\n-              onChange={handleOPDChange}\r\n-            >\r\n-              <option value=\"\">Pilih OPD</option>\r\n-              {opds.map((OPD) => (\r\n-                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n-                  {OPD.nama_opd}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedUrusan}\r\n-              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n-              disabled={!selectedOPD}\r\n-            >\r\n-              <option value=\"\">Pilih Urusan</option>\r\n-              {urusans.map((Urusan) => (\r\n-                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n-                  {Urusan.nama_urusan}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Dari Tahun\"\r\n-              value={DariTahun}\r\n-              onChange={(e) => setDariTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Sampai Tahun\"\r\n-              value={SampaiTahun}\r\n-              onChange={(e) => setSampaiTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-\r\n-            <button className=\"search-button\" type=\"submit\">\r\n-              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n-              Cari\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-\r\n-        {error && <p className=\"error-message\">{error}</p>}\r\n-\r\n-        {loading ? (\r\n-          <p>Loading...</p>\r\n-        ) : (\r\n-          <div className=\"sektoral-results\">\r\n-            <h3>Hasil Pencarian</h3>\r\n-            <table className=\"sektoral-table\">\r\n-              <thead>\r\n-                <tr>\r\n-                  <th>Uraian</th>\r\n-                  <th>Satuan</th>\r\n-                  <th>Jenis</th>\r\n-                  <th>Kategori</th>\r\n-                </tr>\r\n-              </thead>\r\n-              <tbody>\r\n-                {results.length > 0 ? (\r\n-                  results.map((item, index) => (\r\n-                    <tr key={index}>\r\n-                      <td>{item.uraian_dssd}</td>\r\n-                      <td>{item.satuan}</td>\r\n-                      <td>{item.jenis_string}</td>\r\n-                      <td>{item.kategori_string}</td>\r\n-                    </tr>\r\n-                  ))\r\n-                ) : (\r\n-                  <tr>\r\n-                    <td colSpan=\"4\">Tidak ada data yang ditemukan</td>\r\n-                  </tr>\r\n-                )}\r\n-              </tbody>\r\n-            </table>\r\n-\r\n-            {/* Pagination */}\r\n-            {results.length > 0 && (\r\n-              <div className=\"pagination\">\r\n-                <span>Halaman:</span>\r\n-                {Array.from({ length: totalPages }, (_, index) => (\r\n-                  <button\r\n-                    key={index}\r\n-                    onClick={() => handlePageChange(index + 1)}\r\n-                    className={`page-button ${page === index + 1 ? 'active' : ''}`}\r\n-                  >\r\n-                    {index + 1}\r\n-                  </button>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-\r\n-            {/* Pengaturan jumlah data per halaman */}\r\n-            <div className=\"pagination-controls\">\r\n-              <label>Data per halaman:</label>\r\n-              <select value={perPage} onChange={handlePerPageChange}>\r\n-                <option value=\"20\">20</option>\r\n-                <option value=\"30\">30</option>\r\n-                <option value=\"40\">40</option>\r\n-                <option value=\"50\">50</option>\r\n-              </select>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Sektoral;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728551089428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,177 @@\n-\n+import React, { useState, useEffect } from 'react';\r\n+import axios from \"axios\";\r\n+import \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n+\r\n+const Sektoral = () => {\r\n+  const [opds, setDataOPD] = useState([]);\r\n+  const [urusans, setDataUrusan] = useState([]);\r\n+  const [results, setResults] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+  const [DariTahun, setDariTahun] = useState('');\r\n+  const [SampaiTahun, setSampaiTahun] = useState('');\r\n+  const [selectedOPD, setSelectedOPD] = useState('');\r\n+  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n+\r\n+  // Fetch data OPD saat komponen dimuat\r\n+  useEffect(() => {\r\n+    const fetchDataOPD = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n+        setDataOPD(response.data);\r\n+      } catch (error) {\r\n+        setError(\"Gagal mengambil data OPD\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchDataOPD();\r\n+  }, []);\r\n+\r\n+  // Menghandle perubahan OPD\r\n+  const handleOPDChange = async (e) => {\r\n+    const opdId = e.target.value;\r\n+    setSelectedOPD(opdId);\r\n+    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n+    setLoading(true);\r\n+\r\n+    if (opdId) {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n+        );\r\n+        setDataUrusan(response.data);\r\n+        setError(null);\r\n+      } catch (error) {\r\n+        setError(\"Gagal mengambil data urusan.\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    } else {\r\n+      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  // Menghandle pencarian data\r\n+  const handleSearch = async (e) => {\r\n+    e.preventDefault();\r\n+    setLoading(true);\r\n+\r\n+    try {\r\n+      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n+        params: {\r\n+          id_user_opd: selectedOPD,\r\n+          kode_urusan: selectedUrusan,\r\n+          dari_tahun: DariTahun,\r\n+          sampai_tahun: SampaiTahun,\r\n+        },\r\n+      });\r\n+      setResults(response.data);\r\n+      setError(null);\r\n+    } catch (error) {\r\n+      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"sektoral-container\">\r\n+      <div className=\"sektoral-box\">\r\n+        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n+        <form className=\"search-form\" onSubmit={handleSearch}>\r\n+          <div className=\"search-inputs\">\r\n+            <select\r\n+              className=\"search-input\"\r\n+              value={selectedOPD}\r\n+              onChange={handleOPDChange}\r\n+            >\r\n+              <option value=\"\">Pilih OPD</option>\r\n+              {opds.map((OPD) => (\r\n+                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n+                  {OPD.nama_opd}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+\r\n+            <select\r\n+              className=\"search-input\"\r\n+              value={selectedUrusan}\r\n+              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n+              disabled={!selectedOPD}\r\n+            >\r\n+              <option value=\"\">Pilih Urusan</option>\r\n+              {urusans.map((Urusan) => (\r\n+                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n+                  {Urusan.nama_urusan}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+\r\n+            <input\r\n+              className=\"search-input\"\r\n+              type=\"number\"\r\n+              placeholder=\"Dari Tahun\"\r\n+              value={DariTahun}\r\n+              onChange={(e) => setDariTahun(e.target.value)}\r\n+              required\r\n+            />\r\n+            <input\r\n+              className=\"search-input\"\r\n+              type=\"number\"\r\n+              placeholder=\"Sampai Tahun\"\r\n+              value={SampaiTahun}\r\n+              onChange={(e) => setSampaiTahun(e.target.value)}\r\n+              required\r\n+            />\r\n+            <button className=\"search-button\" type=\"submit\">\r\n+              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n+              Cari\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+\r\n+        {error && <p className=\"error-message\">{error}</p>}\r\n+\r\n+        {loading ? (\r\n+          <p>Loading...</p>\r\n+        ) : (\r\n+          <div className=\"sektoral-results\">\r\n+            <h3>Hasil Pencarian</h3>\r\n+            <table className=\"sektoral-table\">\r\n+              <thead>\r\n+                <tr>\r\n+                  <th>Uraian</th>\r\n+                  <th>Satuan</th>\r\n+                  <th>Jenis</th>\r\n+                  <th>Kategori</th>\r\n+                </tr>\r\n+              </thead>\r\n+              <tbody>\r\n+                {results.length > 0 ? (\r\n+                  results.map((item, index) => (\r\n+                    <tr key={index}>\r\n+                      <td>{item.uraian_dssd}</td>\r\n+                      <td>{item.satuan}</td>\r\n+                      <td>{item.jenis_string}</td>\r\n+                      <td>{item.kategori_string}</td>\r\n+                    </tr>\r\n+                  ))\r\n+                ) : (\r\n+                  <tr>\r\n+                    <td colSpan=\"4\">Tidak ada data yang ditemukan</td>\r\n+                  </tr>\r\n+                )}\r\n+              </tbody>\r\n+            </table>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Sektoral;\r\n"
                },
                {
                    "date": 1728973634206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,222 +0,0 @@\n-import React, { useState, useEffect } from 'react';\r\n-import axios from \"axios\";\r\n-import \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n-\r\n-const Sektoral = () => {\r\n-  const [opds, setDataOPD] = useState([]);\r\n-  const [urusans, setDataUrusan] = useState([]);\r\n-  const [results, setResults] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-  const [DariTahun, setDariTahun] = useState('');\r\n-  const [SampaiTahun, setSampaiTahun] = useState('');\r\n-  const [selectedOPD, setSelectedOPD] = useState('');\r\n-  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n-  \r\n-  // State untuk pagination\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [itemsPerPage] = useState(20); // Jumlah data per halaman\r\n-\r\n-  // Fetch data OPD saat komponen dimuat\r\n-  useEffect(() => {\r\n-    const fetchDataOPD = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n-        setDataOPD(response.data);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data OPD\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchDataOPD();\r\n-  }, []);\r\n-\r\n-  // Menghandle perubahan OPD\r\n-  const handleOPDChange = async (e) => {\r\n-    const opdId = e.target.value;\r\n-    setSelectedOPD(opdId);\r\n-    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n-    setLoading(true);\r\n-\r\n-    if (opdId) {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n-        );\r\n-        setDataUrusan(response.data);\r\n-        setError(null);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data urusan.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    } else {\r\n-      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Menghandle pencarian data\r\n-  const handleSearch = async (e) => {\r\n-    e.preventDefault();\r\n-    setLoading(true);\r\n-\r\n-    try {\r\n-      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n-        params: {\r\n-          id_user_opd: selectedOPD,\r\n-          kode_urusan: selectedUrusan,\r\n-          dari_tahun: DariTahun,\r\n-          sampai_tahun: SampaiTahun,\r\n-        },\r\n-      });\r\n-      setResults(response.data);\r\n-      setError(null);\r\n-      setCurrentPage(1); // Reset halaman saat melakukan pencarian\r\n-    } catch (error) {\r\n-      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Pagination logic\r\n-  const indexOfLastItem = currentPage * itemsPerPage;\r\n-  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n-  const currentItems = results.slice(indexOfFirstItem, indexOfLastItem);\r\n-  const totalPages = Math.ceil(results.length / itemsPerPage);\r\n-\r\n-  const handleNext = () => {\r\n-    if (currentPage < totalPages) {\r\n-      setCurrentPage(currentPage + 1);\r\n-    }\r\n-  };\r\n-\r\n-  const handlePrevious = () => {\r\n-    if (currentPage > 1) {\r\n-      setCurrentPage(currentPage - 1);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"sektoral-container\">\r\n-      <div className=\"sektoral-box\">\r\n-        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n-        <form className=\"search-form\" onSubmit={handleSearch}>\r\n-          <div className=\"search-inputs\">\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedOPD}\r\n-              onChange={handleOPDChange}\r\n-            >\r\n-              <option value=\"\">Pilih OPD</option>\r\n-              {opds.map((OPD) => (\r\n-                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n-                  {OPD.nama_opd}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <select\r\n-              className=\"search-input\"\r\n-              value={selectedUrusan}\r\n-              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n-              disabled={!selectedOPD}\r\n-            >\r\n-              <option value=\"\">Pilih Urusan</option>\r\n-              {urusans.map((Urusan) => (\r\n-                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n-                  {Urusan.nama_urusan}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Dari Tahun\"\r\n-              value={DariTahun}\r\n-              onChange={(e) => setDariTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-            <input\r\n-              className=\"search-input\"\r\n-              type=\"number\"\r\n-              placeholder=\"Sampai Tahun\"\r\n-              value={SampaiTahun}\r\n-              onChange={(e) => setSampaiTahun(e.target.value)}\r\n-              required\r\n-            />\r\n-            <button className=\"search-button\" type=\"submit\">\r\n-              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n-              Cari\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-\r\n-        {error && <p className=\"error-message\">{error}</p>}\r\n-\r\n-        {loading ? (\r\n-          <p>Loading...</p>\r\n-        ) : (\r\n-          <div className=\"sektoral-results\">\r\n-            <h3>Hasil Pencarian</h3>\r\n-            <table className=\"sektoral-table\">\r\n-              <thead>\r\n-                <tr>\r\n-                  <th>Uraian</th>\r\n-                  <th>Satuan</th>\r\n-                  <th>Jenis</th>\r\n-                  <th>Kategori</th>\r\n-                </tr>\r\n-              </thead>\r\n-              <tbody>\r\n-                {currentItems.length > 0 ? (\r\n-                  currentItems.map((item, index) => (\r\n-                    <tr key={index}>\r\n-                      <td>{item.uraian_dssd}</td>\r\n-                      <td>{item.satuan}</td>\r\n-                      <td>{item.jenis_string}</td>\r\n-                      <td>{item.kategori_string}</td>\r\n-                    </tr>\r\n-                  ))\r\n-                ) : (\r\n-                  <tr>\r\n-                    <td colSpan=\"5\">Tidak ada data yang ditemukan</td>\r\n-                  </tr>\r\n-                )}\r\n-              </tbody>\r\n-            </table>\r\n-            {/* Pagination */}\r\n-            {totalPages > 1 && (\r\n-              <div className=\"pagination\">\r\n-                <button\r\n-                  className=\"pagination-button\"\r\n-                  onClick={handlePrevious}\r\n-                  disabled={currentPage === 1}\r\n-                >\r\n-                  Previous\r\n-                </button>\r\n-                <div className=\"page-info\">\r\n-                  Page {currentPage} of {totalPages}\r\n-                </div>\r\n-                <button\r\n-                  className=\"pagination-button\"\r\n-                  onClick={handleNext}\r\n-                  disabled={currentPage === totalPages}\r\n-                >\r\n-                  Next\r\n-                </button>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Sektoral;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729061616267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,231 +0,0 @@\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import \"../../styles/Sektoral.css\";\r\n-\r\n-const Sektoral = () => {\r\n-  const [opds, setDataOPD] = useState([]);\r\n-  const [urusans, setDataUrusan] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState(null);\r\n-  const [DariTahun, setDariTahun] = useState(\"\");\r\n-  const [SampaiTahun, setSampaiTahun] = useState(\"\");\r\n-  const [selectedOPD, setSelectedOPD] = useState(\"\");\r\n-  const [selectedUrusan, setSelectedUrusan] = useState(\"\");\r\n-  const [dataHasil, setDataHasil] = useState([]);\r\n-\r\n-  // State untuk pagination\r\n-  const [currentPage, setCurrentPage] = useState(1);\r\n-  const [itemsPerPage] = useState(20); // jumlah item per halaman\r\n-  const [totalData, setTotalData] = useState(0);\r\n-\r\n-  // Ambil data OPD saat komponen di-mount\r\n-  useEffect(() => {\r\n-    const fetchDataOPD = async () => {\r\n-      try {\r\n-        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n-        setDataOPD(response.data);\r\n-      } catch (error) {\r\n-        setError(error);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchDataOPD();\r\n-  }, []);\r\n-\r\n-  // Mengambil data urusan berdasarkan OPD yang dipilih\r\n-  const handleOPDChange = async (e) => {\r\n-    const opdId = e.target.value;\r\n-    setSelectedOPD(opdId);\r\n-    setSelectedUrusan(\"\");\r\n-    setLoading(true);\r\n-\r\n-    if (opdId) {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n-        );\r\n-        setDataUrusan(response.data);\r\n-        setError(null);\r\n-      } catch (error) {\r\n-        setError(\"Gagal mengambil data urusan.\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    } else {\r\n-      setDataUrusan([]);\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Fungsi untuk menangani pencarian data\r\n-  const handleSearch = async (e = null) => {\r\n-    if (e) {\r\n-      e.preventDefault(); // hanya memanggil preventDefault jika ada event\r\n-    }\r\n-\r\n-    setLoading(true);\r\n-\r\n-    try {\r\n-      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n-        params: {\r\n-          id_user_opd: selectedOPD,\r\n-          kode_urusan: selectedUrusan,\r\n-          dari_tahun: DariTahun,\r\n-          sampai_tahun: SampaiTahun,\r\n-          page: currentPage,\r\n-          per_page: itemsPerPage,\r\n-        },\r\n-      });\r\n-\r\n-      // Simpan data hasil pencarian\r\n-      setDataHasil(response.data);\r\n-\r\n-      // Cek apakah API mengembalikan header x-pagination-total-count\r\n-      const totalItems = response.headers['x-pagination-total-count'];\r\n-      if (totalItems) {\r\n-        setTotalData(parseInt(totalItems, 10));\r\n-      } else {\r\n-        setTotalData(0);\r\n-      }\r\n-\r\n-      setError(null);\r\n-    } catch (error) {\r\n-      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  // Hitung total halaman\r\n-  const totalPages = Math.ceil(totalData / itemsPerPage);\r\n-\r\n-  const handlePageChange = (pageNumber) => {\r\n-    setCurrentPage(pageNumber);\r\n-    handleSearch(); // memanggil handleSearch tanpa event\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className=\"sektoral-container\">\r\n-        <div className=\"sektoral-box\">\r\n-          <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n-          <form className=\"search-form\" onSubmit={handleSearch}>\r\n-            <div className=\"search-inputs\">\r\n-              <select\r\n-                className=\"search-input\"\r\n-                value={selectedOPD}\r\n-                onChange={handleOPDChange}\r\n-              >\r\n-                <option value=\"\">Pilih OPD</option>\r\n-                {opds.map((OPD) => (\r\n-                  <option key={OPD.id_opd} value={OPD.id_opd}>\r\n-                    {OPD.nama_opd}\r\n-                  </option>\r\n-                ))}\r\n-              </select>\r\n-\r\n-              <select\r\n-                className=\"search-input\"\r\n-                value={selectedUrusan}\r\n-                onChange={(e) => setSelectedUrusan(e.target.value)}\r\n-                disabled={!selectedOPD}\r\n-              >\r\n-                <option value=\"\">Pilih Urusan</option>\r\n-                {urusans.map((Urusan) => (\r\n-                  <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n-                    {Urusan.nama_urusan}\r\n-                  </option>\r\n-                ))}\r\n-              </select>\r\n-\r\n-              <input\r\n-                className=\"search-input\"\r\n-                type=\"number\"\r\n-                placeholder=\"Dari Tahun\"\r\n-                value={DariTahun}\r\n-                onChange={(e) => setDariTahun(e.target.value)}\r\n-                required\r\n-              />\r\n-              <input\r\n-                className=\"search-input\"\r\n-                type=\"number\"\r\n-                placeholder=\"Sampai Tahun\"\r\n-                value={SampaiTahun}\r\n-                onChange={(e) => setSampaiTahun(e.target.value)}\r\n-                required\r\n-              />\r\n-              <button className=\"search-button\" type=\"submit\">\r\n-                <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n-                Cari\r\n-              </button>\r\n-            </div>\r\n-          </form>\r\n-\r\n-          {error && <p className=\"error-message\">{error}</p>}\r\n-\r\n-          {loading ? (\r\n-            <p>Loading...</p>\r\n-          ) : (\r\n-            <div className=\"sektoral-results\">\r\n-              <h3>Hasil Pencarian</h3>\r\n-              <table className=\"sektoral-table\">\r\n-                <thead>\r\n-                  <tr>\r\n-                    <th>No</th>  {/* Kelas dihapus */}\r\n-                    <th>Uraian</th>  {/* Kelas dihapus */}\r\n-                    <th>Satuan</th>\r\n-                    <th>Jenis</th>\r\n-                    <th>Kategori</th>  {/* Kelas dihapus */}\r\n-                  </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                  {dataHasil.length > 0 ? (\r\n-                    dataHasil.map((item, index) => (\r\n-                      <tr key={index}>\r\n-                        <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n-                        <td>{item.uraian_dssd}</td>\r\n-                        <td>{item.satuan}</td>\r\n-                        <td>{item.jenis_string}</td>\r\n-                        <td>{item.kategori_string}</td>\r\n-                      </tr>\r\n-                    ))\r\n-                  ) : (\r\n-                    <tr>\r\n-                      <td colSpan=\"5\">Tidak ada data yang ditemukan</td>\r\n-                    </tr>\r\n-                  )}\r\n-                </tbody>\r\n-              </table>\r\n-              {/* Pagination */}\r\n-              <div className=\"pagination\">\r\n-                <button\r\n-                  className=\"pagination-button\"\r\n-                  onClick={() => handlePageChange(currentPage - 1)}\r\n-                  disabled={currentPage === 1}\r\n-                >\r\n-                  Previous\r\n-                </button>\r\n-\r\n-                {/* Page Info di tengah */}\r\n-                <h6 className=\"page-info\" style={{ textAlign: \"center\" }}>\r\n-                  Page {currentPage} of {totalPages}\r\n-                </h6>\r\n-\r\n-                <button\r\n-                  className=\"pagination-button\"\r\n-                  onClick={() => handlePageChange(currentPage + 1)}\r\n-                  disabled={currentPage === totalPages}\r\n-                >\r\n-                  Next\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default Sektoral;\r\n\\ No newline at end of file\n"
                }
            ],
            "date": 1728543574114,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport \"../../styles/Sektoral.css\"; // Pastikan path sesuai\r\n\r\nconst Sektoral = () => {\r\n  const [opds, setDataOPD] = useState([]);\r\n  const [urusans, setDataUrusan] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [DariTahun, setDariTahun] = useState('');\r\n  const [SampaiTahun, setSampaiTahun] = useState('');\r\n  const [selectedOPD, setSelectedOPD] = useState('');\r\n  const [selectedUrusan, setSelectedUrusan] = useState('');\r\n\r\n  // Fetch data OPD saat komponen dimuat\r\n  useEffect(() => {\r\n    const fetchDataOPD = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\"http://116.206.212.234:4000/list-opd\");\r\n        setDataOPD(response.data);\r\n      } catch (error) {\r\n        setError(\"Gagal mengambil data OPD\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDataOPD();\r\n  }, []);\r\n\r\n  // Menghandle perubahan OPD\r\n  const handleOPDChange = async (e) => {\r\n    const opdId = e.target.value;\r\n    setSelectedOPD(opdId);\r\n    setSelectedUrusan(\"\"); // Reset urusan setiap kali OPD berubah\r\n    setLoading(true);\r\n\r\n    if (opdId) {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://116.206.212.234:4000/data-sektoral/list-urusan-by-id-opd?id_user_opd=${opdId}`\r\n        );\r\n        setDataUrusan(response.data);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(\"Gagal mengambil data urusan.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setDataUrusan([]); // Kosongkan urusan jika tidak ada OPD yang dipilih\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Menghandle pencarian data\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\"http://116.206.212.234:4000/data-sektoral\", {\r\n        params: {\r\n          id_user_opd: selectedOPD,\r\n          kode_urusan: selectedUrusan,\r\n          dari_tahun: DariTahun,\r\n          sampai_tahun: SampaiTahun,\r\n        },\r\n      });\r\n      setResults(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(\"Terjadi kesalahan saat mengambil data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sektoral-container\">\r\n      {/* <Navbar/> */}\r\n      <div className=\"sektoral-box\">\r\n        <h2 className=\"sektoral-title\">Cari Data Sektoral</h2>\r\n        <form className=\"search-form\" onSubmit={handleSearch}>\r\n          <div className=\"search-inputs\">\r\n            <select\r\n              className=\"search-input\"\r\n              value={selectedOPD}\r\n              onChange={handleOPDChange}\r\n            >\r\n              <option value=\"\">Pilih OPD</option>\r\n              {opds.map((OPD) => (\r\n                <option key={OPD.id_opd} value={OPD.id_opd}>\r\n                  {OPD.nama_opd}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select\r\n              className=\"search-input\"\r\n              value={selectedUrusan}\r\n              onChange={(e) => setSelectedUrusan(e.target.value)}\r\n              disabled={!selectedOPD}\r\n            >\r\n              <option value=\"\">Pilih Urusan</option>\r\n              {urusans.map((Urusan) => (\r\n                <option key={Urusan.kode_urusan} value={Urusan.kode_urusan}>\r\n                  {Urusan.nama_urusan}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              className=\"search-input\"\r\n              type=\"number\"\r\n              placeholder=\"Dari Tahun\"\r\n              value={DariTahun}\r\n              onChange={(e) => setDariTahun(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              className=\"search-input\"\r\n              type=\"number\"\r\n              placeholder=\"Sampai Tahun\"\r\n              value={SampaiTahun}\r\n              onChange={(e) => setSampaiTahun(e.target.value)}\r\n              required\r\n            />\r\n            <button className=\"search-button\" type=\"submit\">\r\n              <i className=\"fas fa-search\" style={{ marginRight: \"8px\" }}></i>\r\n              Cari\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <div className=\"sektoral-results\">\r\n            <h3>Hasil Pencarian</h3>\r\n            <table className=\"sektoral-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Uraian</th>\r\n                  <th>Satuan</th>\r\n                  <th>Jenis</th>\r\n                  <th>Kategori</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {results.length > 0 ? (\r\n                  results.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td>{item.uraian_dssd}</td>\r\n                      <td>{item.satuan}</td>\r\n                      <td>{item.jenis_string}</td>\r\n                      <td>{item.kategori_string}</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"4\">Tidak ada data yang ditemukan</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sektoral;\r\n"
        }
    ]
}